package Commands;

import InputOutput.Response;
import OtherClasses.Request;

/**
 * класс для команды help
 */
public class Help extends Command {

    /**
     * вывод справочника по командам
     * @param nothing запрос, полученный от клиента
     * @return ответ от сервера
     */
    @Override
    public Response execute(Request nothing) {
        Response response = new Response("info : вывести в стандартный поток вывода информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)" + "\n" +
                "show : вывести в стандартный поток вывода все элементы коллекции в строковом представлении" + "\n" +
                "add {element} : добавить новый элемент в коллекцию" + "\n" +
                "update id {element} : обновить значение элемента коллекции, id которого равен заданному" + "\n" +
                "remove_by_id id : удалить элемент из коллекции по его id" + "\n" +
                "clear : очистить коллекцию" + "\n" +
                "execute_script file_name : считать и исполнить скрипт из указанного файла. В скрипте содержатся команды в таком же виде, в котором их вводит пользователь в интерактивном режиме." + "\n" +
                "exit : завершить программу (без сохранения в файл)" + "\n" +
                "add_if_max {element} : добавить новый элемент в коллекцию, если его значение превышает значение наибольшего элемента этой коллекции" + "\n" +
                "remove_lower {element} : удалить из коллекции все элементы, меньшие, чем заданный" + "\n" +
                "reorder : отсортировать коллекцию в порядке, обратном нынешнему" + "\n" +
                "filter_starts_with_name name : вывести элементы, значение поля name которых начинается с заданной подстроки" + "\n" +
                "print_descending : вывести элементы коллекции в порядке убывания" + "\n" +
                "print_unique_passport_i_d : вывести уникальные значения поля passportID всех элементов в коллекции");
        return response;
    }
}
